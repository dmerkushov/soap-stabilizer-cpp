cmake_minimum_required(VERSION 3.16)
project(soap-stabilizer-cpp)

set(CMAKE_CXX_STANDARD 20)

include_directories(BEFORE SYSTEM thirdparty/gabime thirdparty/nlohmann thirdparty/pugixml)

# Common source files
list(APPEND SRC src/common/str_value.cpp)
list(APPEND SRC src/exceptions/exceptions.cpp)
list(APPEND SRC src/uid/uid.cpp)
list(APPEND SRC src/config/config.cpp)
list(APPEND SRC src/run_manager/run_manager.cpp)
list(APPEND SRC src/metrics/metrics_registry.cpp)
list(APPEND SRC src/metrics/metrics_server.cpp)
list(APPEND SRC src/metrics/metrics_formatter.cpp)
list(APPEND SRC src/metrics/metric.cpp)
list(APPEND SRC src/metrics/counter.cpp)
list(APPEND SRC src/metrics/gauge.cpp)
list(APPEND SRC thirdparty/pugixml/pugixml.cpp)

# Test files
list(APPEND TST test/test_boost_beast.cpp)
list(APPEND TST test/test_mm_client.cpp)
list(APPEND TST test/test_tg_client.cpp)
list(APPEND TST test/test_tg_client_2.cpp)
list(APPEND TST test/test_duty.cpp)
list(APPEND TST test/test_schedule.cpp)
list(APPEND TST test/test_schedule_2.cpp)
list(APPEND TST test/test_exceptions.cpp)
list(APPEND TST test/test_metric.cpp)
list(APPEND TST test/test_manage_configs.cpp)

add_compile_definitions(CPPHTTPLIB_OPENSSL_SUPPORT)
add_executable(soapstab ${SRC} src/main.cpp)
foreach (TST_ITEM ${TST})
    get_filename_component(TST_ITEM_NAME ${TST_ITEM} NAME_WLE)
    add_executable(${TST_ITEM_NAME} ${SRC} ${TST_ITEM})
endforeach ()

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
target_link_libraries(soapstab PRIVATE Threads::Threads)
foreach (TST_ITEM ${TST})
    get_filename_component(TST_ITEM_NAME ${TST_ITEM} NAME_WLE)
    target_link_libraries(${TST_ITEM_NAME} PRIVATE Threads::Threads)
endforeach ()

#find_package(OpenSSL REQUIRED)
#target_link_libraries(soapstab PRIVATE ssl crypto)
#foreach (TST_ITEM ${TST})
#    get_filename_component(TST_ITEM_NAME ${TST_ITEM} NAME_WLE)
#    target_link_libraries(${TST_ITEM_NAME} PRIVATE ssl crypto)
#endforeach ()

set(Boost_USE_STATIC_LIBS ON)
find_package(Boost REQUIRED)
target_link_libraries(soapstab PRIVATE boost_system)
foreach (TST_ITEM ${TST})
    get_filename_component(TST_ITEM_NAME ${TST_ITEM} NAME_WLE)
    target_link_libraries(${TST_ITEM_NAME} PRIVATE boost_system)
endforeach ()
